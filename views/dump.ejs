=<%- include('partials/header.ejs'); -%>

<div class="box" id="heading">
  <h1>
    <%= listTitle %>
  </h1>
</div>

<div class="tab-container">
  <button class="tab-button active" onclick="openTab('daily', event)">Daily</button>
  <button class="tab-button" onclick="openTab('weekly', event)">Weekly</button>
  <button class="tab-button" onclick="openTab('monthly', event)">Monthly</button>
  <button class="tab-button" onclick="openTab('calendar', event)">Calendar</button>
  <button class="tab-button" onclick="openTab('habits', event)">Habits</button>
</div>

<!-- Daily Tasks Tab -->
<div class="box tab-content" id="daily">
  <h2>Daily Tasks</h2>
  <% for(let item of listItems){%>
    <% if(item.category === 'daily') { %>
      <div class="item animate-in">
        <form action="/delete" method="post">
          <input type="checkbox" onchange="this.form.submit()" name="deleteItemId" value="<%= item.id %>">
        </form>

        <div class="item-details">
          <p id="title<%=item.id%>">
            <%= item.title %>
          </p>
          <span class="due-date">
            <% if(item.due_date) { %>
              Due: <%= new Date(item.due_date).toLocaleDateString() %>
            <% } else { %>
              No due date
            <% } %>
          </span>
        </div>

        <form class="edit" action="/edit" method="post">
          <input type="hidden" name="updatedItemId" value="<%= item.id %>">
          <input id="input<%=item.id%>" type="text" name="updatedItemTitle" value="<%= item.title %>" autocomplete="off"
            autofocus="true" hidden="true" />
          <input id="date<%=item.id%>" type="date" name="updatedItemDate" value="<%= item.due_date ? item.due_date.toISOString().split('T')[0] : '' %>" hidden="true" />
          <button id="done<%=item.id%>" class="edit" type="submit" hidden><img class="icon"
              src="/assets/icons/check-solid.svg" alt="tick image"></button>
        </form>
        <button id="edit<%=item.id%>" class="edit" onclick="handler('<%=item.id%>')"><img class="icon"
            src="/assets/icons/pencil.svg" alt="pencil image"></button>
      </div>
    <% } %>
  <% } %>

  <form class="item" action="/add" method="post">
    <input type="text" name="newItem" placeholder="New Task" autocomplete="off" autofocus="true" />
    <input type="date" name="itemDate" />
    <button class="add" type="submit" name="list" value="<%= listTitle %>">+</button>
  </form>
</div>

<!-- Weekly Tasks Tab -->
<div class="box tab-content" id="weekly" style="display:none;">
  <h2>Weekly Tasks</h2>
  <% for(let item of listItems){%>
    <% if(item.category === 'weekly') { %>
      <div class="item animate-in">
        <form action="/delete" method="post">
          <input type="checkbox" onchange="this.form.submit()" name="deleteItemId" value="<%= item.id %>">
        </form>

        <div class="item-details">
          <p id="title<%=item.id%>">
            <%= item.title %>
          </p>
          <span class="due-date">
            <% if(item.due_date) { %>
              Due: <%= new Date(item.due_date).toLocaleDateString() %>
            <% } else { %>
              No due date
            <% } %>
          </span>
        </div>

        <form class="edit" action="/edit" method="post">
          <input type="hidden" name="updatedItemId" value="<%= item.id %>">
          <input id="input<%=item.id%>" type="text" name="updatedItemTitle" value="<%= item.title %>" autocomplete="off"
            autofocus="true" hidden="true" />
          <input id="date<%=item.id%>" type="date" name="updatedItemDate" value="<%= item.due_date ? item.due_date.toISOString().split('T')[0] : '' %>" hidden="true" />
          <button id="done<%=item.id%>" class="edit" type="submit" hidden><img class="icon"
              src="/assets/icons/check-solid.svg" alt="tick image"></button>
        </form>
        <button id="edit<%=item.id%>" class="edit" onclick="handler('<%=item.id%>')"><img class="icon"
            src="/assets/icons/pencil.svg" alt="pencil image"></button>
      </div>
    <% } %>
  <% } %>

  <form class="item" action="/add" method="post">
    <input type="text" name="newItem" placeholder="New Task" autocomplete="off" autofocus="true" />
    <input type="date" name="itemDate" />
    <button class="add" type="submit" name="list" value="<%= listTitle %>">+</button>
  </form>
</div>

<!-- Monthly Tasks Tab -->
<div class="box tab-content" id="monthly" style="display:none;">
  <h2>Monthly Tasks</h2>
  <% for(let item of listItems){%>
    <% if(item.category === 'monthly') { %>
      <div class="item animate-in">
        <form action="/delete" method="post">
          <input type="checkbox" onchange="this.form.submit()" name="deleteItemId" value="<%= item.id %>">
        </form>

        <div class="item-details">
          <p id="title<%=item.id%>">
            <%= item.title %>
          </p>
          <span class="due-date">
            <% if(item.due_date) { %>
              Due: <%= new Date(item.due_date).toLocaleDateString() %>
            <% } else { %>
              No due date
            <% } %>
          </span>
        </div>

        <form class="edit" action="/edit" method="post">
          <input type="hidden" name="updatedItemId" value="<%= item.id %>">
          <input id="input<%=item.id%>" type="text" name="updatedItemTitle" value="<%= item.title %>" autocomplete="off"
            autofocus="true" hidden="true" />
          <input id="date<%=item.id%>" type="date" name="updatedItemDate" value="<%= item.due_date ? item.due_date.toISOString().split('T')[0] : '' %>" hidden="true" />
          <button id="done<%=item.id%>" class="edit" type="submit" hidden><img class="icon"
              src="/assets/icons/check-solid.svg" alt="tick image"></button>
        </form>
        <button id="edit<%=item.id%>" class="edit" onclick="handler('<%=item.id%>')"><img class="icon"
            src="/assets/icons/pencil.svg" alt="pencil image"></button>
      </div>
    <% } %>
  <% } %>

  <form class="item" action="/add" method="post">
    <input type="text" name="newItem" placeholder="New Task" autocomplete="off" autofocus="true" />
    <input type="date" name="itemDate" />
    <input type="hidden" name="category" value="monthly" />
    <button class="add" type="submit" name="list" value="<%= listTitle %>">+</button>
  </form>
</div>

<!-- Calendar View Tab -->
<div class="box tab-content calendar-container" id="calendar" style="display:none;">
  <h2>Calendar View</h2>
  <div class="calendar-controls">
    <button class="calendar-nav-btn" onclick="prevMonth()">&lt;</button>
    <h3 id="calendar-month-year">Month Year</h3>
    <button class="calendar-nav-btn" onclick="nextMonth()">&gt;</button>
  </div>
  <div class="calendar-grid">
    <div class="calendar-header">
      <div>Sun</div>
      <div>Mon</div>
      <div>Tue</div>
      <div>Wed</div>
      <div>Thu</div>
      <div>Fri</div>
      <div>Sat</div>
    </div>
    <div id="calendar-days" class="calendar-days">
      <!-- Calendar days will be populated by JavaScript -->
    </div>
  </div>
  <div id="calendar-task-details" class="calendar-task-details">
    <h4>No date selected</h4>
  </div>
</div>

<!-- Habits Tab -->
<div class="box tab-content" id="habits" style="display:none;">
  <h2>Habit Tracker</h2>
 
  <!-- Habit List -->
  <% if(typeof habits !== 'undefined' && habits.length > 0) { %>
    <% for(let habit of habits) { %>
      <div class="item animate-in habit-item">
        <form action="/toggle-habit" method="post" class="habit-toggle">
          <input type="checkbox"
                 onchange="this.form.submit()"
                 name="habitId"
                 value="<%= habit.id %>"
                 <%= habit.completed_today > 0 ? 'checked' : '' %>>
        </form>

        <div class="item-details">
          <p><%= habit.title %></p>
          <div class="habit-details">
            <span class="habit-days">
              <%= ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
                  .filter((day, index) => habit[day.toLowerCase()])
                  .join(', ') %>
            </span>
            <span class="habit-streak">
              Current Streak: <%= habit.current_streak %>
              | Longest Streak: <%= habit.longest_streak %>
            </span>
          </div>
        </div>

        <form action="/delete-habit" method="post" class="delete-habit">
          <input type="hidden" name="habitId" value="<%= habit.id %>">
          <button type="submit" class="edit delete-habit-btn">
            <img class="icon" src="/assets/icons/trash.png" alt="delete">
          </button>
        </form>
      </div>
    <% } %>
  <% } else { %>
    <div class="no-habits-message">No habits created yet. Add your first habit below!</div>
  <% } %>

  <!-- Add New Habit Form -->
  <form class="item" action="/add-habit" method="post">
    <div class="habit-input-container">
      <input type="text" name="habitTitle" placeholder="Habit Name" required autocomplete="off" />
      <input type="text" name="habitDescription" placeholder="Description (optional)" autocomplete="off" />
     
      <div class="habit-days-selector">
        <label>
          <input type="checkbox" name="habitDays" value="monday"> M
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="tuesday"> T
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="wednesday"> W
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="thursday"> T
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="friday"> F
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="saturday"> S
        </label>
        <label>
          <input type="checkbox" name="habitDays" value="sunday"> S
        </label>
      </div>
 
      <button class="add" type="submit">+</button>
    </div>
  </form>
</div>

<script>
  function handler(id) {
    document.getElementById("title" + id).setAttribute("hidden", true);
    document.getElementById("edit" + id).setAttribute("hidden", true);
    document.getElementById("done" + id).removeAttribute("hidden");
    document.getElementById("input" + id).removeAttribute("hidden");
    document.getElementById("date" + id).removeAttribute("hidden");
  }

  function openTab(tabName) {
    const tabContents = document.getElementsByClassName("tab-content");
    for (let i = 0; i < tabContents.length; i++) {
      tabContents[i].style.display = "none";
    }
   
    const tabButtons = document.getElementsByClassName("tab-button");
    for (let i = 0; i < tabButtons.length; i++) {
      tabButtons[i].className = tabButtons[i].className.replace(" active", "");
    }
   
    document.getElementById(tabName).style.display = "block";
    event.currentTarget.className += " active";
   
    // Apply animation to items when tab is opened
    const items = document.querySelectorAll("#" + tabName + " .item");
    items.forEach((item, index) => {
      setTimeout(() => {
        item.classList.add("visible");
      }, index * 100);
    });
  
    
    // Initialize calendar if calendar tab is opened
    if (tabName === 'calendar') {
      initializeCalendar();
    }
  }

  // Initialize the first tab
  document.addEventListener("DOMContentLoaded", function() {
    openTab('daily');
  });

  // Calendar functionality
  let currentDate = new Date();
  let itemsData =  JSON.stringify(listItems) ;
  
  function initializeCalendar() {
    renderCalendar(currentDate);
  }
  
  function renderCalendar(date) {
    const year = date.getFullYear();
    const month = date.getMonth();
    
    // Update month-year display
    const monthYearElem = document.getElementById('calendar-month-year');
    monthYearElem.textContent = `${date.toLocaleString('default', { month: 'long' })} ${year}`;
    
    // Get first day of month and total days in month
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();
    
    // Clear previous calendar days
    const calendarDays = document.getElementById('calendar-days');
    calendarDays.innerHTML = '';
    
    // Add empty spaces for days before first day of month
    for (let i = 0; i < firstDay; i++) {
      const dayElem = document.createElement('div');
      dayElem.className = 'calendar-day empty';
      calendarDays.appendChild(dayElem);
    }
    
    // Add days with task indicators
    for (let day = 1; day <= daysInMonth; day++) {
      const dayElem = document.createElement('div');
      dayElem.className = 'calendar-day';
      
      // Check if current date
      const currentDateCheck = new Date();
      if (currentDateCheck.getDate() === day && 
          currentDateCheck.getMonth() === month && 
          currentDateCheck.getFullYear() === year) {
        dayElem.classList.add('current-day');
      }
      
      // Add day number
      const dayNumber = document.createElement('span');
      dayNumber.textContent = day;
      dayElem.appendChild(dayNumber);
      
      // Check for tasks on this day
      const taskDate = new Date(year, month, day).toISOString().split('T')[0];
      const dayTasks = itemsData.filter(item => 
        item.due_date && new Date(item.due_date).toISOString().split('T')[0] === taskDate
      );
      
      if (dayTasks.length > 0) {
        const taskIndicator = document.createElement('div');
        taskIndicator.className = 'task-indicator';
        taskIndicator.textContent = dayTasks.length;
        dayElem.appendChild(taskIndicator);
        dayElem.classList.add('has-tasks');
      }
      
      // Add click event to show tasks for the day
      dayElem.addEventListener('click', () => showDayTasks(year, month, day));
      
      calendarDays.appendChild(dayElem);
    }
  }
  
  function showDayTasks(year, month, day) {
    // Clear any 'selected' class
    const allDays = document.querySelectorAll('.calendar-day');
    allDays.forEach(dayElem => dayElem.classList.remove('selected'));
    
    // Add 'selected' class to clicked day
    const dayIndex = day + document.querySelectorAll('.calendar-day.empty').length - 1;
    const selectedDay = document.querySelectorAll('.calendar-day')[dayIndex];
    if (selectedDay) {
      selectedDay.classList.add('selected');
    }
    
    // Find tasks for this day
    const taskDate = new Date(year, month, day).toISOString().split('T')[0];
    const dayTasks = itemsData.filter(item => 
      item.due_date && new Date(item.due_date).toISOString().split('T')[0] === taskDate
    );
    
    // Show tasks in the details area
    const detailsElem = document.getElementById('calendar-task-details');
    
    if (dayTasks.length > 0) {
      let tasksHTML = `<h4>${new Date(year, month, day).toLocaleDateString()} - ${dayTasks.length} Task(s)</h4>`;
      tasksHTML += '<ul class="day-tasks-list">';
      
      dayTasks.forEach(task => {
        const dueDateStr = task.due_date ? new Date(task.due_date).toISOString().split('T')[0] : '';
        tasksHTML += `
          <li class="day-task-item">
            <span class="day-task-title">${task.title}</span>
            <div class="day-task-actions">
              <form action="/edit" method="post" class="calendar-edit-form">
                <input type="hidden" name="updatedItemId" value="${task.id}">
                <input type="text" name="updatedItemTitle" value="${task.title}" required>
                <input type="date" name="updatedItemDate" value="${dueDateStr}">
                <input type="hidden" name="category" value="${task.category || 'daily'}">
                <button type="submit" class="calendar-task-btn calendar-edit-btn">Update</button>
              </form>
              <form action="/delete" method="post" class="calendar-delete-form">
                <input type="hidden" name="deleteItemId" value="${task.id}">
                <button type="submit" class="calendar-task-btn calendar-delete-btn">Complete</button>
              </form>
            </div>
          </li>
        `;
      });
      
      tasksHTML += '</ul>';
      detailsElem.innerHTML = tasksHTML;
    } else {
      // Show form to add a task for this day
      const formattedDate = new Date(year, month, day).toISOString().split('T')[0];
      detailsElem.innerHTML = `
        <h4>${new Date(year, month, day).toLocaleDateString()} - No Tasks</h4>
        <form action="/add" method="post" class="calendar-add-form">
          <input type="text" name="newItem" placeholder="Add new task" required>
          <input type="hidden" name="itemDate" value="${formattedDate}">
          <input type="hidden" name="category" value="daily">
          <button type="submit" class="calendar-task-btn">Add Task</button>
        </form>
      `;
    }
  }
  
  function prevMonth() {
    currentDate.setMonth(currentDate.getMonth() - 1);
    renderCalendar(currentDate);
  }
  
  function nextMonth() {
    currentDate.setMonth(currentDate.getMonth() + 1);
    renderCalendar(currentDate);
  }
</script>

<%- include('partials/footer.ejs'); -%>